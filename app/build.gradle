apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        buildConfigField("boolean", "LOG_DEBUG", "${rootProject.ext.configs.logEnable}")
        buildConfigField("String", "api_host", "\"${rootProject.ext.api.api_host}\"")

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/proguard/androidx-annotations.pro'
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    implementation(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["design"]
    implementation(rootProject.ext.dependencies["recyclerview-v7"]) {
        exclude module: 'support-annotations'
    }
    implementation rootProject.ext.dependencies["annotations"]
    implementation rootProject.ext.dependencies["constraint"]

    testImplementation rootProject.ext.dependencies["junit"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    implementation rootProject.ext.dependencies["okhttp3"]
    implementation rootProject.ext.dependencies["logging-interceptor"]
    implementation(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    implementation(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    implementation(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    implementation rootProject.ext.dependencies["dagger2"]
    implementation rootProject.ext.dependencies["logger"]
    implementation rootProject.ext.dependencies["dagger2-android"]
    implementation rootProject.ext.dependencies["dagger2-android-support"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger2-android-processor"]
    implementation rootProject.ext.dependencies["rxjava"]
    implementation(rootProject.ext.dependencies["rxandroid"]) {
        exclude module: 'rxjava'
    }
    implementation(rootProject.ext.dependencies["rxlifecycle"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    implementation(rootProject.ext.dependencies["rxlifecycle-android"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    implementation rootProject.ext.dependencies["gson"]
    implementation rootProject.ext.dependencies["eventbus"]
    implementation rootProject.ext.dependencies["glide"]
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }


}
